openapi: 3.0.0

info:
  title: Irma bot frontend API
  description: API
  version: '1.0.0'

servers:
  - url: https://irma-bot.tk/api/v1

paths:
  /healthcheck:
    get:
      summary: Healthcheck
      operationId: Healthcheck
      responses:
        200:
          $ref: '#/components/responses/HealthcheckResponse'

  /group:
    get:
      summary: Get group
      operationId: GetGroup
      parameters:
        - $ref: '#/components/parameters/Token'
      responses:
        200:
          $ref: '#/components/responses/GetGroupResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        500:
          $ref: '#/components/responses/InternalErrorResponse'
    post:
      summary: Save group
      operationId: SaveGroup
      parameters:
        - $ref: '#/components/parameters/Token'
      requestBody:
        $ref: '#/components/requestBodies/SaveGroupRequest'
      responses:
        200:
          $ref: '#/components/responses/SaveGroupResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        500:
          $ref: '#/components/responses/InternalErrorResponse'

  /token:
    get:
      summary: Get token data
      operationId: GetTokenData
      parameters:
        - $ref: '#/components/parameters/Token'
      responses:
        200:
          $ref: '#/components/responses/GetTokenResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        500:
          $ref: '#/components/responses/InternalErrorResponse'

components:
  schemas:
    Healthcheck:
      type: object

    Group:
      type: object
      required:
        - id
        - greeting
        - ban_question
        - ban_url
        - ban_timeout
        - questions
      properties:
        id:
          type: integer
          format: int64
        greeting:
          type: string
        ban_question:
          type: boolean
        ban_url:
          type: boolean
        ban_timeout:
          type: integer
          format: int32
        questions:
          $ref: '#/components/schemas/Questions'

    Questions:
      type: array
      items:
        $ref: '#/components/schemas/Question'

    Question:
      type: object
      required:
        - text
        - answers
      properties:
        text:
          type: string
        answers:
          $ref: '#/components/schemas/Answers'

    Answers:
      type: array
      items:
        $ref: '#/components/schemas/Answer'

    Answer:
      type: object
      required:
        - text
      properties:
        text:
          type: string
        correct:
          type: boolean

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    TokenData:
      type: object
      required:
        - ttl
      properties:
        ttl:
          type: string
          format: date-fime

  responses:
    HealthcheckResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Healthcheck'

    GetGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'

    NotFoundErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    GetTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenData'

    SaveGroupResponse:
      content:
        application/json:
          schema:
            type: object

  parameters:
    Token:
      name: token
      in: query
      required: true
      schema:
        type: string

  requestBodies:
    SaveGroupRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
